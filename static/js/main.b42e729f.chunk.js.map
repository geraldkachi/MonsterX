{"version":3,"sources":["components/card/CardComponent.js","components/cardlist/CardList.js","components/searchbox/SearchBox.js","components/monsterx/MonstersX.js","App.js","reportWebVitals.js","index.js"],"names":["CardComponent","monster","className","src","id","alt","style","fontFamily","name","email","CardList","monsters","cardarray","length","map","fontSize","SearchBox","setSearchField","search","type","value","placeholder","onChange","e","target","MonstersX","React","useState","setMonsters","useEffect","hmmmm","a","axios","then","res","data","catch","err","console","error","filteredMonsters","filter","toLowerCase","includes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gVAceA,G,YAVO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,aAC1E,oBAAIC,MAAO,CAACC,WAAW,iBAAvB,SAA0CN,EAAQO,OAClD,mBAAGF,MAAO,CAACC,WAAW,iBAAtB,SAAyCN,EAAQQ,aCc9CC,EAnBE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEXC,EAAYD,EAASE,OACzBF,EAASG,KAAI,SAACb,GAAD,OACX,8BACE,cAAC,EAAD,CAAeA,QAASA,KADhBA,EAAQG,OAKpB,qBAAKE,MAAO,CAACC,WAAW,gBAAiBQ,SAAS,IAAKb,UAAU,kBAAjE,sBAGF,OACE,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,YAAf,SAA4BU,OCCnBI,G,MAhBG,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAInC,OACE,uBACEhB,UAAU,SACViB,KAAK,SACLX,KAAK,SACLY,MAAOF,EACPG,YAAY,kBACZC,SATmB,SAACC,GAAD,OAAON,EAAeM,EAAEC,OAAOJ,YC+BzCK,EA9BG,WAAO,IAAD,EAEYC,IAAMC,SAAS,IAF3B,mBAEbhB,EAFa,KAEHiB,EAFG,OAGaF,IAAMC,SAAS,IAH5B,mBAGbT,EAHa,KAGLD,EAHK,KAKpBS,IAAMG,WAAU,WACZC,MACC,IAEH,IAAMA,EAAK,uCAAG,sBAAAC,EAAA,sDACZC,IAAM,8CACHC,MAAK,SAACC,GAAD,OAASN,EAAYM,EAAIC,SAC9BC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,MAHpB,2CAAH,qDAOLG,EAAmB7B,EAAS8B,QAAO,SAAAxC,GACvC,OAAOA,EAAQO,KAAKkC,cAAcC,SAASzB,EAAOwB,kBAGtD,OACI,sBAAKxC,UAAU,OAAf,UACI,2CACA,cAAC,EAAD,CAAWgB,OAAQA,EAAQD,eAAgBA,IAC3C,cAAC,EAAD,CAAUN,SAAU6B,QChBjBI,MATf,WAEE,OACE,qBAAK1C,UAAU,MAAf,SACE,cAAC,EAAD,OCGS2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b42e729f.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../card/card.css'\r\n\r\n\r\nconst CardComponent = ({monster}) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monsterx\"/>\r\n            <h1 style={{fontFamily:\"Bigelow Rules\"}}>{monster.name}</h1>\r\n            <p style={{fontFamily:\"Bigelow Rules\"}}>{monster.email}</p>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","import React from \"react\";\r\nimport \"../cardlist/cardlist.css\"\r\nimport CardComponent from \"../card/CardComponent\"\r\n\r\nconst CardList = ({monsters}) => {\r\n\r\n  const cardarray = monsters.length ? (\r\n    monsters.map((monster) => (\r\n      <div key={monster.id}>\r\n        <CardComponent monster={monster} />\r\n      </div>\r\n    ))\r\n  ) : (\r\n    <div style={{fontFamily:\"Bigelow Rules\", fontSize:50}} className=\"text-white pl-5\">No Cards</div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className=\"card-list\">{cardarray}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"../searchbox/searchbox.css\";\r\n\r\nconst SearchBox = ({ setSearchField, search }) => {\r\n  \r\n  const onSearchChange = (e) => setSearchField(e.target.value)\r\n\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      name=\"search\"\r\n      value={search}\r\n      placeholder=\"search monsters\"\r\n      onChange={onSearchChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react'\r\nimport axios from \"axios\";\r\nimport CardList from '../cardlist/CardList'\r\nimport SearchBox from '../searchbox/SearchBox'\r\nimport '../../App.css'\r\n\r\nconst MonstersX = () => {\r\n\r\n    const [monsters, setMonsters] = React.useState([])\r\n    const [search, setSearchField] = React.useState('')\r\n    \r\n    React.useEffect(() => {\r\n        hmmmm()\r\n      }, [])\r\n\r\n      const hmmmm = async () => {\r\n        axios(`https://jsonplaceholder.typicode.com/users`)\r\n          .then((res) => setMonsters(res.data))\r\n          .catch((err) => console.error(err))\r\n      }\r\n\r\n\r\n      const filteredMonsters = monsters.filter(monster => {\r\n        return monster.name.toLowerCase().includes(search.toLowerCase())\r\n      })\r\n\r\n    return (\r\n        <div className=\"my-5\">\r\n            <h1>MonstersX</h1>\r\n            <SearchBox search={search} setSearchField={setSearchField} /> \r\n            <CardList monsters={filteredMonsters} />\r\n        </div>\r\n    )\r\n}\r\n// filteredMonsters={filteredMonsters} \r\n\r\nexport default MonstersX\r\n","import React from \"react\";\nimport \"./App.css\";\n// import CardList from \"./components/cardlist/CardList\";\nimport MonstersX from \"./components/monsterx/MonstersX\"\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <MonstersX /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}